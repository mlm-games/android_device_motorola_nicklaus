name: Build Motorola Nicklaus ROM

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Cleanup
        uses: rokibhasansagar/slimhub_actions@main

      # - name: Swap Space
      #   uses: pierotofy/set-swap-space@master
      #   with:
      #     swap-size-gb: 12

      # - name: Setup ccache
      #   uses: hendrikmuhs/ccache-action@v1.2
      #   with:
      #     key: android-7.1-build
      #     max-size: 15G
      
      # - name: Checkout repository
      #   uses: actions/checkout@v4


      - name: Set up environment variables
        run: |
          echo "Setting environment variables"
          export DEBIAN_FRONTEND=noninteractive
          export LANG=C
          export LANGUAGE=en_US:en
          export LC_ALL=C
          export ANDROID_JACK_VM_ARGS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G"
          export USER=$(whoami)

      - name: Install deps
        run: |
          sudo apt-get update && sudo apt-get install -y locales && locale-gen en_US.UTF-8
          echo "Installing dependencies"
          sudo apt-get update && sudo apt-get install -y \
            git-core \
            gnupg \
            flex \
            bison \
            gperf \
            build-essential \
            zip \
            curl \
            zlib1g-dev \
            gcc-multilib \
            g++-multilib \
            libc6-dev-i386 \
            lib32ncurses5-dev \
            x11proto-core-dev \
            libx11-dev \
            lib32z1-dev \
            ccache \
            libgl1-mesa-dev \
            libxml2-utils \
            xsltproc \
            unzip \
            python \
            python-pip \
            wget \
            repo \
            openjdk-8-jdk \
            android-tools-adb \
            android-tools-fastboot \
            schedtool \
            libssl-dev \
            bc \
            rsync \
            nano \
            vim \
            screen \
            imagemagick \
            lsof \
            python3 \
            python3-pip \
            locales

      - name: Modify java.security file
        run: |
          echo "Modifying java.security file"
          sudo sed -i '/jdk.tls.disabledAlgorithms/ s/TLSv1, TLSv1.1, //' /etc/java-8-openjdk/security/java.security

      # - name: Install repo tool
      #   run: |
      #     echo "Installing repo tool"
      #     curl https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo \
      #     && sudo chmod a+x /usr/local/bin/repo

      - name: Setup git config
        run: |
          echo "Setting up git config"
          git config --global user.name "mlm-games" \
          && git config --global user.email "noreply@email.com" \

      - name: Run build
        run: |
          export USE_CCACHE=0
          #export CCACHE_EXEC=/usr/bin/ccache
          #export CCACHE_DIR=/root/.ccache
          # Install repo after cleaning checkout
          sudo rm *
          sudo rm -rf *
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          export PATH=\$PATH:~/bin
          # Initialize Repo with minimal depth
          mkdir ~/workdir
          cd ~/workdir
          repo init --depth=1 -u https://github.com/LineageOS/android.git -b cm-14.1
          # Sync sources with minimal options
          repo sync -c -q --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune -j$(nproc)
          # Clone device trees with minimal depth
          git clone --depth=1 https://github.com/mlm-games/android_device_motorola_nicklaus -b cm-14.1 device/motorola/nicklaus
          git clone --depth=1 https://github.com/LineageOS-MediaTek/android_device_mediatek_mt6737-common -b cm-14.1 device/mediatek/common
          git clone --depth=1 https://github.com/LineageOS-MediaTek/proprietary_vendor_motorola -b cm-14.1 vendor/motorola
          git clone --depth=1 https://github.com/Klozz/android_kernel_motorola_nicklaus kernel/motorola/nicklaus
          # Set build flags for optimization
          export USE_DEX2OAT_DEBUG=false
          export WITH_DEXPREOPT=false
          export WITH_DEXPREOPT_BOOT_IMG_ONLY=false
          export DISABLE_DEXPREOPT=true
          export PRODUCT_MINIMIZE_JAVA_DEBUG_INFO=true
          export TEMPORARY_DISABLE_PATH_RESTRICTIONS=true
          # Start building
          cd ~/workdir  # Make sure we're in the correct directory
          source build/envsetup.sh
          breakfast nicklaus
          make -j$(nproc) bacon | tee build.log
            
      - name: Print space left
        run: |
          echo "::group::<{[<]}> Raw Disk Space After Building <{[>]}>"
          df --sync -BM --output=pcent,used,avail /
          echo "::endgroup::"
      
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: nicklaus-build
          path: |
            ~/workdir/out/target/product/nicklaus/*.zip
            ~/workdir/out/target/product/nicklaus/*.md5sum
            ~/workdir/build.log
