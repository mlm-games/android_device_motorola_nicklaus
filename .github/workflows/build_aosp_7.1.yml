name: Build Motorola Nicklaus ROM

on:
  push:
    branches: '**'
  pull_request:
    branches: '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Clean runner environment

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run build in Docker container
        uses: docker://mlmgames/aosp_7.1
        with:
          entrypoint: /bin/bash
          args: -c "
            # Install repo (if not already in the Docker image)
            mkdir -p ~/bin
            curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
            chmod a+x ~/bin/repo
            export PATH=\$PATH:~/bin

            # Initialize Repo
            mkdir ~/workdir
            cd ~/workdir
            repo init -u https://github.com/LineageOS/android.git -b cm-14.1

            # Sync sources
            repo sync -c -q -j8 --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune

            # Clone necessary trees
            git clone https://github.com/mlm-games/android_device_motorola_nicklaus -b cm-14.1 device/motorola/nicklaus
            git clone https://github.com/LineageOS-MediaTek/android_device_mediatek_mt6737-common -b cm-14.1 device/mediatek/mt6737-common
            git clone https://github.com/LineageOS-MediaTek/proprietary_vendor_motorola -b cm-14.1 vendor/motorola
            git clone https://github.com/Klozz/android_kernel_motorola_nicklaus kernel/motorola/nicklaus

            # Set flags for disabling dexpreopt
            echo 'export USE_DEX2OAT_DEBUG=false' >> ~/.bashrc
            echo 'export WITH_DEXPREOPT=false' >> ~/.bashrc
            echo 'export WITH_DEXPREOPT_BOOT_IMG_ONLY=false' >> ~/.bashrc
            echo 'export DISABLE_DEXPREOPT=true' >> ~/.bashrc
            echo 'export PRODUCT_MINIMIZE_JAVA_DEBUG_INFO=true' >> ~/.bashrc
            echo 'export TEMPORARY_DISABLE_PATH_RESTRICTIONS=true' >> ~/.bashrc
            source ~/.bashrc

            # Enable ccache
            echo 'export CCACHE_DIR=\$GITHUB_WORKSPACE/.ccache' >> ~/.bashrc
            echo 'export USE_CCACHE=1' >> ~/.bashrc
            echo 'export CCACHE_COMPRESS=1' >> ~/.bashrc
            source ~/.bashrc
            mkdir -p $GITHUB_WORKSPACE/.ccache
            prebuilts/misc/linux-x86/ccache/ccache -M 50G

            # Clean build
            make clean && make clobber

            # Start building
            . build/envsetup.sh
            breakfast nicklaus
            make -j$(nproc) bacon | tee build.log
          "

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: nicklaus-build
          path: ~/workdir/out/target/product/nicklaus/*
